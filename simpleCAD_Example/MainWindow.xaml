<Window
	x:Class="simpleCAD_Example.MainWindow"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:local="clr-namespace:simpleCAD_Example"
	xmlns:local_controls="clr-namespace:simpleCAD_Example.Controls"
	
	xmlns:sCAD="clr-namespace:simpleCAD;assembly=simpleCAD"
	xmlns:cadGeom="clr-namespace:simpleCAD.Geometry;assembly=simpleCAD"
	
	mc:Ignorable="d"
	
	
	xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
	
	TextElement.Foreground="{DynamicResource MaterialDesignBody}"
	TextElement.FontWeight="Medium"
	TextElement.FontSize="14"
	TextOptions.TextFormattingMode="Ideal" 
	TextOptions.TextRenderingMode="Auto"
	
	Background="{DynamicResource MaterialDesignPaper}"
	FontFamily="{DynamicResource MaterialDesignFont}"
	
	
	Closing="Window_Closing"
	
	Title="MainWindow"
	Height="800"
	Width="900">

	<Window.Resources>

		<local:DocumentChangesToBangeConverter x:Key="DocumentChangesToBangeConverter"/>

		<x:Array
			x:Key="GeometryTypes"
			Type="sCAD:ICadGeometry">
			<cadGeom:cadLine />
			<cadGeom:cadCircle />
			<cadGeom:cadEllipse />
			<cadGeom:cadRectangle />
			<cadGeom:cadArc />
			<cadGeom:cadPolyline />
		</x:Array>

	</Window.Resources>

	<materialDesign:DialogHost>
		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition Height="*"/>
			</Grid.RowDefinitions>

			<sCAD:SimpleCAD
			x:Name="sCAD"
			
			Grid.Row="0"
			VerticalAlignment="Stretch"
			HorizontalAlignment="Stretch"
			
			State="{Binding DocManager.CurrentDocument.CurrentState, Mode=TwoWay}"
			/>

			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto"/>
					<RowDefinition Height="Auto"/>
				</Grid.RowDefinitions>

				<!-- 0 TABS-->
				<materialDesign:Card
				Grid.Row="0"
				Margin="8, 3, 8, 3"
				materialDesign:ShadowAssist.ShadowDepth="Depth4">

					<Grid>

						<Grid.RowDefinitions>
							<RowDefinition Height="auto"/>
							<RowDefinition Height="auto"/>
						</Grid.RowDefinitions>

						<StackPanel
						Grid.Row="0"
						
						Margin="8, 8, 8, 8"
						Orientation="Horizontal">

							<StackPanel.Resources>
								<Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
									<Setter Property="Background" Value="Transparent"/>
									<Setter Property="BorderBrush" Value="Transparent"/>
									<Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}"/>

									<Setter Property="Margin" Value="3, 0, 3, 0"/>
									<Setter Property="Padding" Value="0"/>
								</Style>

								<Style TargetType="{x:Type materialDesign:PackIcon}" BasedOn="{StaticResource {x:Type materialDesign:PackIcon}}">
									<Setter Property="Width" Value="26"/>
									<Setter Property="Height" Value="26"/>
								</Style>
							</StackPanel.Resources>

							<Button
							Click="NewButton_Click">
								<materialDesign:PackIcon
								Kind="File" />
							</Button>

							<Button
							Click="OpenButton_Click">
								<materialDesign:PackIcon
								Kind="Folder" />
							</Button>

							<Button
							Click="SaveButton_Click">
								<materialDesign:PackIcon Kind="ContentSave" />
							</Button>

						</StackPanel>

						<ListBox
						Grid.Row="1"
						SelectedIndex="0"
						SelectedItem="{Binding DocManager.CurrentDocument, Mode=TwoWay}"
						ItemsSource="{Binding DocManager.OpenDocuments, Mode=OneWay}">

							<ListBox.ItemsPanel>
								<ItemsPanelTemplate>
									<StackPanel Orientation="Horizontal" />
								</ItemsPanelTemplate>
							</ListBox.ItemsPanel>

							<ListBox.ItemContainerStyle>
								<Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}">
									<!--
								Too big padding on Ripple - wrap around ListBoxItemTemplate. Disable it.
								I want draw selection line at ListBoxItem bottom without any padding.
								Look at ItemTemplate.
								-->
									<Setter Property="Padding" Value="0"/>
									<!--
								I dont want to change ListBoxItem background color when it selected.
								But if you look inside default ListBoxItem style - MaterialDesignListBoxItem,
								you wil see that it have Border named "SelectedBorder" with Background={Binding Foreground...}.
								This border is invisible(Opacity=0) by default.
								But when item was selected border's opacity changes to 0.18 inside "Selected" visual state.
								
								For disable changing item background on selection without override ListBoxItem.ControlTemplate
								lets set ListBoxItem.Foreground="Transparent". But all text inside ListBoxItem now will have
								transparent foreground, so return TextBlock.Foreground to MaterialDesign foreground brush inside
								ItemTemplate.
								-->
									<Setter Property="Foreground" Value="Transparent"/>
									<Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
								</Style>
							</ListBox.ItemContainerStyle>

							<ListBox.ItemTemplate>
								<DataTemplate DataType="{x:Type local:Document}">
									<Grid
									Margin="0, 8, 0, 0">
										<Grid.RowDefinitions>
											<RowDefinition Height="auto"/>
											<RowDefinition Height="auto"/>
											<RowDefinition Height="auto"/>
										</Grid.RowDefinitions>

										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="auto"/>
											<ColumnDefinition Width="auto"/>
										</Grid.ColumnDefinitions>

										<Button
										Grid.Row="0"
										Grid.Column="1"
										
										Margin="0, 0, 16, 0"
										Padding="0"
										
										Width="16"
										Height="16"
										
										Click="CloseDocumentButton_Click"
										>
											<materialDesign:PackIcon
											Kind="CloseBox" />
										</Button>

										<materialDesign:Badged
										Grid.Row="1"
										Grid.Column="0"
										
										Margin="16, 0, 0, 8"
										BadgePlacementMode="TopLeft"
										Badge="{Binding ChangesCount, Mode=OneWay, Converter={StaticResource DocumentChangesToBangeConverter}}">
											<TextBlock
											Margin="3"
											Foreground="{DynamicResource MaterialDesignBody}"
											Text="{Binding DisplayName, Mode=OneWay}"/>
										</materialDesign:Badged>

										<Border
										Grid.Row="2"
										Grid.Column="0"
										Grid.ColumnSpan="2"
										
										Padding="0 5 0 0"
										CornerRadius="2"
										>
											<Border.Style>
												<Style TargetType="{x:Type Border}">
													<Setter Property="Background" Value="Transparent"/>
													<Style.Triggers>
														<DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
															<Setter Property="Background" Value="{DynamicResource SecondaryAccentBrush}"/>
														</DataTrigger>
													</Style.Triggers>
												</Style>
											</Border.Style>
										</Border>
									</Grid>
								</DataTemplate>
							</ListBox.ItemTemplate>

						</ListBox>

					</Grid>

				</materialDesign:Card>

				<!-- 1 GEOMETRY-->
				<local_controls:GeometryListBox
				Margin="16, 3, 16, 3"
				Grid.Row="1"
				Style="{StaticResource MaterialDesignToolToggleListBox}"
				ItemsSource="{StaticResource GeometryTypes}">

					<local_controls:GeometryListBox.ItemContainerStyle>
						<Style TargetType="{x:Type local_controls:GeometryListBoxItem}" BasedOn="{StaticResource MaterialDesignToolToggleListBoxItem}">
							<Setter Property="TargetGeometry" Value="{Binding Path=GeometryToCreate, ElementName=sCAD, Mode=TwoWay}"/>
						</Style>
					</local_controls:GeometryListBox.ItemContainerStyle>

					<ListBox.ItemTemplate>
						<DataTemplate DataType="{x:Type sCAD:ICadGeometry}">

							<Image
							ToolTip="{Binding DisplayName, Mode=OneWay}"
							Stretch="None"
							Source="{Binding GeomImage, Mode=OneWay}"/>

						</DataTemplate>
					</ListBox.ItemTemplate>

				</local_controls:GeometryListBox>

			</Grid>

			<ListBox
			Grid.Row="0"
			VerticalAlignment="Top"
			HorizontalAlignment="Right"
			Grid.IsSharedSizeScope="True"
			Background="Aqua"
			ItemsSource="{Binding SelectedGeometry.Properties, ElementName=sCAD}">
				<ListBox.Resources>
					<DataTemplate DataType="{x:Type cadGeom:Property_ViewModel}">
						<TextBox
						IsReadOnly="{Binding IsReadOnly}"
						Text="{Binding Value, Mode=TwoWay}"/>
					</DataTemplate>
				</ListBox.Resources>
				<ListBox.ItemTemplate>
					<DataTemplate>
						<Border>
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*" SharedSizeGroup="PropertyName" />
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="*" SharedSizeGroup="PropertyValue" />
								</Grid.ColumnDefinitions>

								<TextBlock
								Margin="1"
								Grid.Column="0"
								Text="{Binding Name}" />
								<GridSplitter
								Grid.Column="1"
								Width="1"
								Background="Black"
								VerticalAlignment="Stretch" />
								<ContentPresenter
								Margin="1"
								Grid.Column="2"
								Content="{Binding .}" />
							</Grid>
						</Border>
					</DataTemplate>
				</ListBox.ItemTemplate>
			</ListBox>

			<Grid
			Margin="16, 0, 16, 8"
			VerticalAlignment="Bottom">

				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="Auto"/>
				</Grid.ColumnDefinitions>

				<Grid.RowDefinitions>
					<RowDefinition Height="64"/>
				</Grid.RowDefinitions>

				<materialDesign:Card
				VerticalAlignment="Stretch"
				DataContext="{Binding Path=cadToolTip, ElementName=sCAD}">

					<materialDesign:Card.Style>
						<Style TargetType="{x:Type materialDesign:Card}">
							<Setter Property="Visibility" Value="Visible"/>
							<Style.Triggers>
								<DataTrigger Binding="{Binding Path=cadToolTip, ElementName=sCAD}" Value="{x:Null}">
									<Setter Property="Visibility" Value="Hidden"/>
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</materialDesign:Card.Style>

					<Grid
					VerticalAlignment="Center">

						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>

						<Image
						Grid.Row="0"
						Grid.RowSpan="2"
						
						Margin="16, 3, 0, 3"
						HorizontalAlignment="Left"
						VerticalAlignment="Center"
						
						Stretch="None"
						StretchDirection="DownOnly"
						Source="{Binding Path=Image, Mode=OneWay}"/>
						<TextBlock
						Grid.Row="0"
						
						Margin="56, 3, 16, 0"
						HorizontalAlignment="Left"
						VerticalAlignment="Center"
						
						Style="{DynamicResource MaterialDesignSubheadingTextBlock}"
						Text="{Binding Path=Header}"/>

						<TextBlock
						Grid.Row="1"
						
						Margin="56, 0, 16, 3"
						HorizontalAlignment="Left"
						VerticalAlignment="Center"
						
						Style="{DynamicResource MaterialDesignBody1TextBlock}"
						Foreground="{DynamicResource MaterialDesignBodyLight}"
						Text="{Binding Path=TooltipText}"/>

					</Grid>

				</materialDesign:Card>

			</Grid>
		</Grid>
	</materialDesign:DialogHost>
</Window>
